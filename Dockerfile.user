ARG FROM_TAG
FROM mrlisdim/zephyr_base_container:${FROM_TAG:-latest}

RUN dpkg --add-architecture i386 && \
        apt-get -y update && \
        apt-get -y upgrade && \
        apt-get install --no-install-recommends -y \
    clang-tidy clang-format \
	openbox \
	python-xdg \
    # Needed for guiconfig displaying
    python3-tk \
	libpython3.8-dev \
	x11vnc \
	xvfb \
	xterm \
	xz-utils && \
	rm -rf /var/lib/apt/lists/*

# CMake formating tool
RUN pip3 install cmake-format

# Install JLink debugging tools
ARG JLINK_DEB=JLink_Linux_x86_64.deb
RUN wget ${WGET_ARGS} \
    --post-data 'accept_license_agreement=accepted&non_emb_ctr=confirmed' \
    https://www.segger.com/downloads/jlink/${JLINK_DEB} \
    && dpkg -i ${JLINK_DEB} \
    && rm ${JLINK_DEB}

# Some hack for cortex-debug VS Code plugin. It use arm-none-eabi-gdb and arm-none-eabi-objdump
RUN mkdir /cortex-debug-helpers
ADD ./cortex-debug-helpers/arm-none-eabi-gdb /cortex-debug-helpers
ADD ./cortex-debug-helpers/arm-none-eabi-objdump /cortex-debug-helpers
RUN chmod +x /cortex-debug-helpers/arm-none-eabi-gdb && \
    chmod +x /cortex-debug-helpers/arm-none-eabi-objdump 

ENV DISPLAY=host.docker.internal:0

ADD ./entrypoint.sh /home/user/entrypoint.sh
ADD ./bash_completion /home/user/.bash_completion
RUN mkdir -p /home/user/.bash_completion.d
RUN chown -R user:user /home/user

RUN dos2unix /home/user/entrypoint.sh

EXPOSE 5900

ENTRYPOINT ["/home/user/entrypoint.sh"]
CMD ["/bin/bash"]
USER user

ARG VNCPASSWD=zephyr
RUN mkdir ~/.vnc && x11vnc -storepasswd ${VNCPASSWD} ~/.vnc/passwd
